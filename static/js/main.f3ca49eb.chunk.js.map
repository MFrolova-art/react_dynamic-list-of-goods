{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","id","name","color","style","API_URL","getAll","a","fetch","response","json","get5First","sort","good1","good2","localeCompare","slice","getRedGoods","filter","good","App","useState","setGoods","hasError","setHasError","handleAll","useCallback","allGoods","handleGet5First","firstFive","hanldeGetRedColor","redColor","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGD,GAJID,WCTTI,EAAO,wEAEN,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,yBAGEA,EAASC,QAHX,4C,sBAMA,IAAMC,EAAS,uCAAG,4BAAAJ,EAAA,sEACHD,IADG,cACjBP,EADiB,yBAGhBA,EACJa,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMX,KAAKa,cAAcD,EAAMZ,SACtDc,MAAM,EAAG,IALW,2CAAH,qDAQTC,EAAW,uCAAG,4BAAAV,EAAA,sEACLD,IADK,cACnBP,EADmB,yBAGlBA,EAAMmB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKhB,UAHR,2CAAH,qDCbXiB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOtB,EAAP,KAAcuB,EAAd,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAEMC,EAAYC,sBAAW,sBAAC,4BAAAnB,EAAA,6DAC5BiB,GAAY,GADgB,kBAIHlB,IAJG,OAIpBqB,EAJoB,OAM1BL,EAASK,GANiB,gDAQ1BH,GAAY,GARc,yDAU3B,IAEGI,EAAkBF,sBAAW,sBAAC,4BAAAnB,EAAA,6DAClCiB,GAAY,GADsB,kBAIRb,IAJQ,OAI1BkB,EAJ0B,OAMhCP,EAASO,GANuB,gDAQhCL,GAAY,GARoB,yDAUjC,IAEGM,EAAoBJ,sBAAW,sBAAC,4BAAAnB,EAAA,6DACpCiB,GAAY,GADwB,kBAIXP,IAJW,OAI5Bc,EAJ4B,OAMlCT,EAASS,GANyB,gDAQlCP,GAAY,GARsB,yDAUnC,IAEH,OACE,sBAAKQ,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAST,EAHX,4BAQA,wBACEQ,KAAK,SACL,UAAQ,oBACRC,QAASN,EAHX,gCAQA,wBACEK,KAAK,SACL,UAAQ,aACRC,QAASJ,EAHX,4BAQA,cAAClC,EAAD,CAAWG,MAAOA,IAEjBwB,GACC,mBAAGS,UAAU,QAAb,sCC1ERG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f3ca49eb.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul>\n      {goods.map(({ id, name, color }) => (\n        <li\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport async function getAll(): Promise<Good[]> {\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n\nexport const get5First = async () => {\n  const goods = await getAll();\n\n  return goods\n    .sort((good1, good2) => good1.name.localeCompare(good2.name))\n    .slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const goods = await getAll();\n\n  return goods.filter(good => good.color === 'red');\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [hasError, setHasError] = useState(false);\n\n  const handleAll = useCallback(async () => {\n    setHasError(false);\n\n    try {\n      const allGoods = await getAll();\n\n      setGoods(allGoods);\n    } catch {\n      setHasError(true);\n    }\n  }, []);\n\n  const handleGet5First = useCallback(async () => {\n    setHasError(false);\n\n    try {\n      const firstFive = await get5First();\n\n      setGoods(firstFive);\n    } catch {\n      setHasError(true);\n    }\n  }, []);\n\n  const hanldeGetRedColor = useCallback(async () => {\n    setHasError(false);\n\n    try {\n      const redColor = await getRedGoods();\n\n      setGoods(redColor);\n    } catch {\n      setHasError(true);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleAll}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handleGet5First}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={hanldeGetRedColor}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n\n      {hasError && (\n        <p className=\"error\">\n          Unable to show goods\n        </p>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}